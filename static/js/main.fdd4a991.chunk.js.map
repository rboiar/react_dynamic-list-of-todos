{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectedTodo","className","map","id","title","completed","type","onClick","TodoFilter","selectStatus","query","setSelectStatus","setQuery","value","onChange","event","currentTarget","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoId","useState","user","setUser","isValidCard","setIsValidCard","currentTodo","find","useEffect","userId","userFromServer","href","email","name","App","setTodos","isLoading","setIsLoading","queryFilter","setQueryFilter","setTodoId","todosFromServer","visibleTodos","filter","todo","todoItem","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdd4a991.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectedTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id,\n          title,\n          completed,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  return selectedTodoId === id\n                    ? selectedTodo(0)\n                    : selectedTodo(id);\n                }}\n              >\n                <span className=\"icon\">\n                  {selectedTodoId === id\n                    ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { ChangeEvent } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectStatus: string,\n  query: string,\n  setSelectStatus: (arg: string) => (string) | void;\n  setQuery: (value: string) => (string) | void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectStatus,\n  query,\n  setSelectStatus,\n  setQuery,\n}) => {\n  const handleQueryReset = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const handleSelectStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectStatus(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectStatus}\n            onChange={handleSelectStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryReset}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectedTodo: (value: number) => number | void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoId,\n  todos,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isValidCard, setIsValidCard] = useState(true);\n\n  const currentTodo = todos.find(({ id }) => id === todoId);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(userFromServer => setUser(userFromServer));\n    }\n  }, []);\n\n  if (!isValidCard) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todoId}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setIsValidCard(false);\n                  selectedTodo(0);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [queryFilter, setQueryFilter] = useState('');\n  const [selectStatus, setSelectStatus] = useState('all');\n  const [todoId, setTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filterBy = todos.filter((todo) => {\n    switch (selectStatus) {\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const visibleTodos = filterBy.filter(todoItem => {\n    return todoItem.title\n      .toLocaleLowerCase()\n      .includes(queryFilter.toLocaleLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                selectStatus={selectStatus}\n                setSelectStatus={setSelectStatus}\n                query={queryFilter}\n                setQuery={setQueryFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={todoId}\n                    selectedTodo={todo => setTodoId(todo)}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId && (\n        <TodoModal\n          todos={visibleTodos}\n          todoId={todoId}\n          selectedTodo={todo => setTodoId(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}